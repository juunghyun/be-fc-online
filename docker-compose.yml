# docker-compose 파일 버전
version: '3.8'

# 실행할 서비스(컨테이너)들의 목록
services:
  # 1. Spring Boot 앱 서비스
  app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy # db 서비스가 healthy 상태가 될 때까지 기다립니다.
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/fifa_db?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password123
      - SPRING_JPA_HIBERNATE_DDL_AUTO=validate
      - JWT_SECRET_KEY=9AdBFABVQPKfPBnTcPrc1djstfvMbXVENvtamrYQHfUvJo1jVdfQEOOdE1RL4Ov3MrgB37dcsE3nPfpcMPS4EuXJchIkd2yc
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQLDialect

  # 2. MySQL 데이터베이스 서비스
  db:
    image: mysql:8.0
    container_name: be-fc-scouter-db
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
    environment:
      - MYSQL_DATABASE=fifa_db
      - MYSQL_ROOT_PASSWORD=password123
      - TZ=Asia/Seoul
    ports:
      - "3307:3306"
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

# DB 데이터 저장 공간 정의
volumes:
  db_data: