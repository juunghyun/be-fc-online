# docker-compose 파일 버전
version: '3.8'

services:
  # 1. Nginx 리버스 프록시 (사용자가 접속하는 최종 입구)
  # 이 서비스가 프론트엔드 서버 역할을 겸합니다.
  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80" # 외부의 80번 포트 요청을 받습니다.
    volumes:
      # 백엔드 프로젝트의 nginx/nginx.conf 파일을 컨테이너 안으로 복사
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # frontend 서비스가 빌드한 결과물을 이 컨테이너로 가져와 사용
      - frontend_build:/usr/share/nginx/html
    depends_on:
      - app
      - frontend

  # 2. 백엔드 (API 서버)
  app:
    build: . # 백엔드 프로젝트의 Dockerfile을 사용하여 빌드
    environment:
      - SPRING_PROFILES_ACTIVE=prod # 'prod' 프로필로 실행
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}

  # 3. 프론트엔드 (빌드 전용)
  # 이 서비스는 오직 React 프로젝트를 빌드해서 'frontend_build' 공간에
  # 저장하는 역할만 하고 종료됩니다.
  frontend:
    build:
      # 백엔드 프로젝트 폴더 기준으로, 프론트엔드 프로젝트 폴더의 상대 경로
      context: ../fe-fc-scouter
      dockerfile: Dockerfile
    volumes:
      - frontend_build:/app/build

volumes:
  # Nginx와 Frontend가 빌드 결과물을 공유하기 위한 저장 공간
  frontend_build: